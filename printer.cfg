[include mainsail.cfg]
[include lcd-tweak.cfg]
[include macros.cfg]
#[include klipper-expander.cfg]
[include led-effects.cfg]
[include test-probe-accuracy.cfg]
[include KAMP_Settings.cfg]
[include ./KAMP/Adaptive_Meshing.cfg]
[include exhaust-fans.cfg]
[gcode_arcs]

resolution: 0.2

[exclude_object]

[respond]
default_type: command

[mcu]
serial: /dev/serial/by-id/usb-Klipper_stm32f446xx_130038001450325635393320-if00

[mcu EBBCan]
canbus_uuid: 0d5a0ba2be95

#[mcu rpi]
#serial: /tmp/klipper_host_mcu

[printer]
kinematics: corexy
max_velocity: 400 
max_accel: 4000
max_accel_to_decel:2000     # Half of max_accel
max_z_velocity: 15
max_z_accel: 50
square_corner_velocity: 5.0

[adxl345]
#cs_pin: rpi: None
cs_pin: EBBCan: PB12
spi_software_sclk_pin: EBBCan: PB10
spi_software_mosi_pin: EBBCan: PB11
spi_software_miso_pin: EBBCan: PB2
axes_map: z,-y,x

[resonance_tester]
accel_chip: adxl345
probe_points:
    150, 150, 20

[input_shaper]
shaper_type_x = ei
shaper_freq_x = 61.275 #51.724 #42.857 #45.933 #44.49 #47.76
shaper_type_y = ei
shaper_freq_y = 61.162 #59.347 #42.857 #43.1267 #56.64 #51.45


#####################################################################
#   X/Y Stepper Settings
#####################################################################

[stepper_x]
##  Connected to X-MOT (B Motor)
##  B Stepper - Left
##  Endstop connected to X-
step_pin: PE11
dir_pin: !PE10
enable_pin: !PE9
rotation_distance: 40
microsteps: 32  #16 default
full_steps_per_rotation:200
endstop_pin: EBBCan:PB6 #^PA1
position_min: 0
position_endstop: 300
position_max: 300
homing_speed: 35   #Max 100
homing_retract_dist: 5
homing_positive_dir: true

[tmc2209 stepper_x]
uart_pin: PE7
interpolate: False
run_current: 0.6
sense_resistor: 0.110
stealthchop_threshold: 0

[stepper_y]
##  Connected to Y-MOT (A Motor)
##  A Stepper - Right
##  Endstop connected to Y-
step_pin: PD8
dir_pin: !PB12
enable_pin: !PD9
rotation_distance: 40
microsteps: 32  #16 default
full_steps_per_rotation:200
endstop_pin: ^PA2
position_min: 0 #0 default
position_endstop: 302 #Old 308, but with Tap, collides into front doors
position_max: 302 #Old 308, but with Tap, collides into front doors
homing_speed: 35  #Max 100
homing_retract_dist: 5
homing_positive_dir: true

[tmc2209 stepper_y]
uart_pin: PE15
interpolate: False
run_current: 0.6
sense_resistor: 0.110
stealthchop_threshold: 0



#####################################################################
#   Z Stepper Settings
#####################################################################

##  Z0 Stepper - Left Z Motor
##  Connected to E1-MOT
##  Endstop connected to Z-
[stepper_z]
step_pin: PE6
dir_pin: PC13
enable_pin: !PE5

## Rotation Distance for TR8x8 = 8, TR8x4 = 4, TR8x2 = 2
rotation_distance: 4
microsteps: 128  #16 default
full_steps_per_rotation: 200	#200 for 1.8 degree, 400 for 0.9 degree

##endstop_pin: ^PA0
##  Z-position of nozzle (in mm) to z-endstop trigger point relative to print surface (Z0)
##  (+) value = endstop above Z0, (-) value = endstop below
##  Increasing position_endstop brings nozzle closer to the bed
##  After you run Z_ENDSTOP_CALIBRATE, position_endstop will be stored at the very end of your config
#position_endstop = 0.290       #PLA
endstop_pin: probe:z_virtual_endstop   ## Tap
position_min: -5                   ## Tap

## All builds use same Max Z
position_max: 250
position_min: -2.5

homing_speed: 6.0 # Leadscrews are slower than 2.4, 10 is a recommended max.
second_homing_speed: 3
homing_retract_dist: 3

[tmc2209 stepper_z]
uart_pin: PC14
interpolate: False
run_current: 0.6
sense_resistor: 0.110
stealthchop_threshold: 0


##  Z1 Stepper - Rear Z Motor
##  Connected to E2-MOT
[stepper_z1]
step_pin: PE2
dir_pin: PE4
enable_pin: !PE3

##  Remember to mirror these changes in stepper_z and stepper_z2! (there are three motors)
rotation_distance: 4
microsteps: 128
full_steps_per_rotation: 200	#200 for 1.8 degree, 400 for 0.9 degree

[tmc2209 stepper_z1]
uart_pin: PC15
interpolate: False
run_current: 0.6
sense_resistor: 0.110
stealthchop_threshold: 0


##  Z2 Stepper - Right Rear Z Motor
##  Connected to E3-MOT
[stepper_z2]
step_pin: PD12
dir_pin: PC4
enable_pin: !PE8

##  Remember to mirror these changes in stepper_z and stepper_z1! (there are three motors)
rotation_distance: 4
microsteps: 128
full_steps_per_rotation: 200	#200 for 1.8 degree, 400 for 0.9 degree

[tmc2209 stepper_z2]
uart_pin: PA15
interpolate: False
run_current: 0.6
sense_resistor: 0.110
stealthchop_threshold: 0



#####################################################################
#   Extruder
#####################################################################

##  In E0-MOT Position
[extruder]
step_pin: EBBCan:PD0 #PD5
dir_pin: EBBCan:PD1 #PD6
enable_pin: !EBBCan:PD2 #!PD4

##  Update value below when you perform extruder calibration
##  If you ask for 100mm of filament, but in reality it is 98mm:
##  rotation_distance = <previous_rotation_distance> * <actual_extrude_distance> / 100
##  22.6789511 is a good starting point
rotation_distance: 22.5705 #22.6789511	#Bondtech 5mm Drive Gears
##  Update Gear Ratio depending on your Extruder Type
##  Use 50:17 for Afterburner/Clockwork1 (BMG Gear Ratio)
##  Use 50:10 for Stealthburner/Clockwork2 (BMG Gear Ratio)
##  Use 80:20 for M4, M3.1
gear_ratio: 50:10				
microsteps: 16
full_steps_per_rotation: 400	#200 for 1.8 degree, 400 for 0.9 degree
nozzle_diameter: 0.400
filament_diameter: 1.75
##  In E0 OUT Position
heater_pin: EBBCan:PB13 #PB15
sensor_type: ATC Semitec 104NT-4-R025H42G #PT1000
sensor_pin: EBBCan:PA3 #PC0 # TE0 Position
min_temp: 10
max_temp: 270
max_power: 1.0
min_extrude_temp: 170 #170 default, 10 only to calibrate e-steps
max_extrude_only_distance: 100
max_extrude_cross_section: 5.5 ## For adaptive purge
pressure_advance: 0.033    ##	Default 0.03 Try to keep pressure_advance below 1.0
pressure_advance_smooth_time: 0.030    ##	Default is 0.040, leave stock, but Ellis uses 0.02

[tmc2209 extruder]
uart_pin: EBBCan:PA15 #PD7
interpolate: false
run_current: 0.5
sense_resistor: 0.110
stealthchop_threshold: 0


#####################################################################
#   Smart Filament Sensor
##################################################################### 

[filament_motion_sensor filament_sensor]
detection_length: 10
#   The minimum length of filament pulled through the sensor to trigger
#   a state change on the switch_pin
#   Default is 7 mm.
extruder: extruder
#   The name of the extruder section this sensor is associated with.
#   This parameter must be provided.
switch_pin: ^PA0
#   The pin on which the switch is connected. This parameter must be
#   provided.
pause_on_runout: True
#   When set to True, a PAUSE will execute immediately after a runout
#   is detected. Note that if pause_on_runout is False and the
#   runout_gcode is omitted then runout detection is disabled. Default
#   is True.
runout_gcode:
    M117 Runout detected
    #FILAMENT_ERROR   # LED Effect macro for error states
    G4 P10
#   A list of G-Code commands to execute after a filament runout is
#   detected. See docs/Command_Templates.md for G-Code format. If
#   pause_on_runout is set to True this G-Code will run after the
#   PAUSE is complete. The default is not to run any G-Code commands.
insert_gcode:
    M117 Insert detected
#   A list of G-Code commands to execute after a filament insert is
#   detected. See docs/Command_Templates.md for G-Code format. The
#   default is not to run any G-Code commands, which disables insert
#   detection.
#event_delay: 3.0
#   The minimum amount of time in seconds to delay between events.
#   Events triggered during this time period will be silently
#   ignored. The default is 3 seconds.
#pause_delay: 0.5
#   The amount of time to delay, in seconds, between the pause command
#   dispatch and execution of the runout_gcode. It may be useful to
#   increase this delay if OctoPrint exhibits strange pause behavior.
#   Default is 0.5 seconds.

[delayed_gcode AUTO_DISABLE_SFS] ; This will disable the SFS 1 second after klipper starts
initial_duration: 1
gcode:
    SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=0

[gcode_macro ENABLE_SFS] ; Add this to PRINT_START
description: Enable smart filament sensor
gcode:
    M117 Enabling filament sensor
    G92 E0
    SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=1

[gcode_macro DISABLE_SFS] ; Add this to PRINT_END and PRINT_CANCEL
description: Disable smart filament sensor 
gcode:
    M117 Disabling filament sensor
    G92 E0
    SET_FILAMENT_SENSOR SENSOR=filament_sensor ENABLE=0



#####################################################################
#   Bed Heater
#####################################################################

[heater_bed]
##  SSR Pin - In BED OUT position
heater_pin: PB4
sensor_type: Generic 3950
sensor_pin: PB0 # TB Position
##  Adjust Max Power so your heater doesn't warp your bed
max_power: 1
min_temp: 0
max_temp: 120
#control: pid
#pid_kp: 58.437
#pid_ki: 2.347
#pid_kd: 363.769

[idle_timeout]
timeout: 3600
gcode:
    M104 S0                          ; turn off hotend
    M140 S0                          ; turn off bed
    M106 S0                          ; turn off fan
    #STOP_LED_EFFECTS
    #SET_LED_EFFECT EFFECT=status_idle
    #SET_LED_EFFECT EFFECT=display_screen_default
    #SET_LED_EFFECT EFFECT=display_dial_default



#####################################################################
#   Probe
#####################################################################

#[probe]
##  Inductive Probe - If you use this section , please comment the [bltouch] section
##  This probe is not used for Z height, only Quad Gantry Leveling
##  In Z+ position
##  If your probe is NC instead of NO, add change pin to ^PA3
#pin: ^PA3
#x_offset: 0
#y_offset: 25.0
#z_offset: 0
#speed: 8.0
#samples: 3
#samples_result: median
#sample_retract_dist: 3.0
#samples_tolerance: 0.006
#samples_tolerance_retries: 3

## TAP
[probe]
pin: ^EBBCan:PB5 #^PA3
x_offset: 0
y_offset: 0
#z_offset: 0
speed: 4
lift_speed: 8
samples: 3
samples_result: median
sample_retract_dist: 3.2
samples_tolerance: 0.009 # 0.005
samples_tolerance_retries: 4
activate_gcode:
    {% set PROBE_TEMP = 150 %}
    {% set MAX_TEMP = PROBE_TEMP + 5 %}
    {% set ACTUAL_TEMP = printer.extruder.temperature %}
    {% set TARGET_TEMP = printer.extruder.target %}

    {% if TARGET_TEMP > PROBE_TEMP %}
        { action_respond_info('Extruder temperature target of %.1fC is too high, lowering to %.1fC' % (TARGET_TEMP, PROBE_TEMP)) }
        M109 S{ PROBE_TEMP }
    {% else %}
        # Temperature target is already low enough, but nozzle may still be too hot.
        {% if ACTUAL_TEMP > MAX_TEMP %}
            { action_respond_info('Extruder temperature %.1fC is still too high, waiting until below %.1fC' % (ACTUAL_TEMP, MAX_TEMP)) }
            TEMPERATURE_WAIT SENSOR=extruder MAXIMUM={ MAX_TEMP }
        {% endif %}
    {% endif %}

[safe_z_home]
#home_xy_position: 172.5,308  # Sexbolt
home_xy_position: 150,260
z_hop: 5.0

[z_tilt]
z_positions:
	-46, 20
	150, 338
	346, 20
points:
    10, 10
	150, 290
	290, 10
speed: 400
horizontal_move_z: 3
retries: 7
retry_tolerance: 0.007

[bed_mesh]
speed: 400
horizontal_move_z: 3
mesh_min: 40, 40
mesh_max: 260,260
fade_start: 0.6
fade_end: 10.0
probe_count: 9,9
algorithm: bicubic
#relative_reference_index: 23



#####################################################################
#   Fan Control
#####################################################################

[heater_fan hotend_fan]
##  Hotend Fan - Spider FAN1/PA14
##  PB7 = RGB Red
##  PB6 = RGB Green
pin: EBBCan:PA0 #PA14
max_power: 1.0
kick_start_time: 0.5
heater: extruder
heater_temp: 70.0
fan_speed: 1.0

[fan]
##  Print Cooling Fan - Spider FAN0/PA13
pin: EBBCan:PA1 #PA13
max_power: 1.0
kick_start_time: 0.5
##  Depending on your fan, you may need to increase this value
##  if your fan will not start. Can change cycle_time (increase)
##  if your fan is not able to slow down effectively
off_below: 0.10

[heater_fan controller_fan]
##  Controller fan - Spider FAN2/PB2
pin: PB2
kick_start_time: 0.5
heater: heater_bed
heater_temp: 70.0

#[fan_generic exhaust_fan]
##  Spider FAN2/PA14 - Control speed in macro with SET_FAN_SPEED
#pin: PA14
#max_power: 1.0
#shutdown_speed: 0.0
#kick_start_time: 5.0 



#####################################################################
#   Thermals
#####################################################################

#[temperature_sensor raspberry_pi]
#sensor_type: temperature_host
#max_temp: 100

#[temperature_sensor mcu_temp]
#sensor_type: temperature_mcu
#max_temp: 100

[temperature_sensor SB2209]
sensor_type: Generic 3950
sensor_pin: EBBCan: PA2



#####################################################################
#   LED Control
#####################################################################

#[output_pin caselight]
#pin: expander:PA1
#pwm: true
#shutdown_value: 0
#value:0
#cycle_time: 0.01



####################################################################
#	Displays
#####################################################################

[display]
#  mini12864 LCD Display
lcd_type: uc1701
cs_pin: PC11
a0_pin: PD2
rst_pin: PC10
encoder_pins: ^PC6,^PC7
click_pin: ^!PA8
contrast: 63
#spi_bus: spi1
spi_software_mosi_pin: PA7
spi_software_miso_pin: PA6
spi_software_sclk_pin: PA5

#[neopixel fysetc_mini12864]
#  To control Neopixel RGB in mini12864 display
#pin: PC12
#chain_count: 3
#initial_RED: .19
#initial_GREEN: .1
#initial_BLUE: .06
#color_order: RGB

#  Set RGB values on boot up for each Neopixel.
#  Index 1 = display, Index 2 and 3 = Knob
#[delayed_gcode setdisplayneopixel]
#initial_duration: 1
#gcode:
        #SET_LED LED=fysetc_mini12864 RED=.19 GREEN=.1 BLUE=.06 INDEX=1 TRANSMIT=0
        #SET_LED LED=fysetc_mini12864 RED=.45 GREEN=.15 BLUE=.12 INDEX=2 TRANSMIT=0
        #SET_LED LED=fysetc_mini12864 RED=.45 GREEN=.15 BLUE=.12 INDEX=3

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 67.189
#*# pid_ki = 4.109
#*# pid_kd = 274.636
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 24.892
#*# pid_ki = 2.514
#*# pid_kd = 61.610
#*#
#*# [probe]
#*# z_offset = -0.980
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	  0.040469, 0.070781, 0.080625, 0.081250, 0.073281, 0.052969, 0.069844, 0.050156, 0.050469
#*# 	  0.028594, 0.053906, 0.072812, 0.082500, 0.078750, 0.073750, 0.070000, 0.088125, 0.063437
#*# 	  0.017500, 0.055000, 0.059219, 0.084062, 0.110469, 0.104375, 0.069844, 0.092656, 0.075469
#*# 	  0.003750, 0.040625, 0.054687, 0.076250, 0.087656, 0.111094, 0.081406, 0.101406, 0.089531
#*# 	  -0.042500, 0.013594, 0.044531, 0.061719, 0.103594, 0.104062, 0.065937, 0.096406, 0.095000
#*# 	  -0.058125, -0.022969, 0.013906, 0.059375, 0.077656, 0.078281, 0.084062, 0.081875, 0.072187
#*# 	  -0.080313, -0.039844, 0.007656, 0.041562, 0.032812, 0.067031, 0.064375, 0.072187, 0.058281
#*# 	  -0.116719, -0.053750, -0.020000, 0.031719, 0.033281, 0.051406, 0.047187, 0.052344, 0.024219
#*# 	  -0.122188, -0.079688, -0.066563, -0.010469, -0.020938, 0.017187, 0.017187, 0.016719, -0.002344
#*# tension = 0.2
#*# min_x = 40.0
#*# algo = bicubic
#*# y_count = 9
#*# mesh_y_pps = 2
#*# min_y = 44.88
#*# x_count = 9
#*# max_y = 259.93
#*# mesh_x_pps = 2
#*# max_x = 259.76
